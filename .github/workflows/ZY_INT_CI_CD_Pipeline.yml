name: ZY - INT - CI/CD Pipeline  

on:  
  workflow_dispatch:  
    inputs:  
      environment:  
        description: 'Environment'  
        required: true  
        type: choice  
        options:  
          - 'INT'  
          - 'QA'  
          - 'QAProd'  
          - 'Production'  

jobs:
  Trigger_Builds:
    runs-on: self-hosted
    outputs:
      build_results: ${{ steps.trigger.outputs.build_results }}
    steps:
      - name: Trigger Workflows with PowerShell  
        id: trigger
        shell: pwsh  
        run: |
          # Define repositories
          $repos = @(
            "CoreLearner"
            "DemoNotCore"
          )

          # Initialize result list
          $results = @()

          # Set environment
          $environment = "${{ inputs.environment }}"
          $token = "${{ secrets.PAT_TOKEN }}"
          $owner = "${{ github.repository_owner }}"
          $repo = "${{ github.event.repository.name }}"

          # Loop through repositories and trigger workflows
          foreach ($repoName in $repos) {
              $url = "https://api.github.com/repos/$owner/$repo/actions/workflows/Build_Deploy.yml/dispatches"
              $body = @{
                  ref = "main"
                  inputs = @{
                      repo_name   = $repoName
                      environment = $environment
                  }
              } | ConvertTo-Json -Depth 2 -Compress

              try {
                  $response = Invoke-RestMethod -Uri $url -Method Post -Headers @{
                      "Authorization" = "Bearer $token"
                      "Accept"        = "application/vnd.github.v3+json"
                      "Content-Type"  = "application/json"
                  } -Body $body

                  Write-Output "✅ Triggered workflow for $repoName"
                  $results += "${repoName}: ✅ Triggered"
              } catch {
                  Write-Output "❌ Failed to trigger $repoName - $($_.Exception.Message)"
                  $results += "${repoName}: ❌ Failed"
              }
          }

          # Save results to a file
          $resultString = $resultString -replace "`r?`n", ""
          echo "build_results=$resultString" >> $env:GITHUB_OUTPUT

  Email_Notification:  
    runs-on: self-hosted  
    needs: Trigger_Builds  
    steps:  
      - name: Send Email Notification  
        if: always()  
        shell: pwsh  
        run: |  
          $statusSummary = "${{ needs.Trigger_Builds.outputs.build_results }}"
          $smtpServer = "x2.eduneering.com"
          $smtpFrom = "rootdrop@eduneering.com"
          $smtpTo = "zeeshan.yousaf@ul.com"
          $smtpPort = "25"
          $subject = "INT - CI/CD Build Status"
          $body = @"
          INT CI/CD Pipeline has been completed.

          Summary:

          $statusSummary
          "@

          #Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -From $smtpFrom -To $smtpTo -Subject $subject -Body $body
