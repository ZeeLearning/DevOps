name: CI/CD Pipeline  

on:   
  schedule:  
    - cron: '*/5 * * * *'  # Runs every 4 hours  
  #   - cron: '0 */4 * * *'  # Runs every 4 hours  
#   workflow_dispatch:  
#     inputs:  
#       repo_name:  
#         description: 'Repository Name'  
#         required: true  
#         type: choice  
#         options:  
#           - 'CW.Aphrodite'  
#           - 'CW.Apollo'  
#           - 'CW.Athena'  
#           - 'CW.Chronos'  
#           - 'CW.ClientWebREST_API'  
#           - 'CW.ComplianceWire-1.0'  
#           - 'CW.Admin'  
#           - 'CW.Learner'  
#           - 'CW.CWWebApi'  
#           - 'CW.Hyperion'  
#           - 'CW.PSTools'  
#           - 'CW.ReportEngine'  
#           - 'CW.Zeus'  

jobs:  
  INT_CI_CD_Pipeline:  
    runs-on: self-hosted 
    strategy:  
      matrix:  
        repo_name: [  
          'CW.Aphrodite',  
          #'CW.Apollo',  
          #'CW.Athena',  
          #'CW.Chronos',  
          'CW.ClientWebREST_API'] 
        #   'CW.ComplianceWire-1.0',  
        #   'CW.Admin',  
        #   'CW.Learner',  
        #   'CW.CWWebApi',  
        #   'CW.Hyperion',  
        #   'CW.PSTools',  
        #   'CW.ReportEngine',  
        #   'CW.Zeus'  
        #]  

    steps:  
      - name: Trigger Build/Deploy Workflow for ${{ matrix.repo_name }}  
        uses: actions/github-script@v6  
        with:  
          github-token: ${{ secrets.PAT_TOKEN }}  
          script: |  
            await github.rest.actions.createWorkflowDispatch({  
              owner: 'Underwriters-Labs',  
              repo: '${{ matrix.repo_name }}',  
              workflow_id: 'Build_Deploy_Env_GitHub.yml',  
              ref: 'main',  
              inputs: {  
                repo_name: '${{ matrix.repo_name }}',  
                environment: 'INT'  # Pre-defined environment  
              }  
            });  

      # - name: Send Email Notification  
      #   if: always()  
      #   uses: dawidd6/action-send-mail@v3  
      #   with:  
      #     server_address: ${{ secrets.MAIL_SERVER }}  
      #     server_port: ${{ secrets.MAIL_PORT }}  
      #     username: ${{ secrets.MAIL_USERNAME }}  
      #     password: ${{ secrets.MAIL_PASSWORD }}  
      #     subject: 'Build/Deploy Status for ${{ matrix.repo_name }}'  
      #     body: 'The build and deployment process for ${{ matrix.repo_name }} has completed with status: ${{ job.status }}'  
      #     to: 'team@example.com'  
      #     from: 'ci-cd-pipeline@example.com'  

      - name: Send Email Notification  
        if: always()  
        shell: powershell 
        run: | 
          $smtpServer = "x2.eduneering.com" 
          $smtpFrom = "rootdrop@eduneering.com" 
          $smtpTo = "zeeshan.yousaf@ul.com" 
          $smtpPort = "25" 
          $subject = "Build/Deploy Status for ${{ matrix.repo_name }}" 
          $body = "The build and deployment process for ${{ matrix.repo_name }} has completed with status: ${{ job.status }}" 

          Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -From $smtpFrom -To $smtpTo -Subject $subject -Body $body 

  
# This setup triggers the build/deploy workflow for every repository in the list  
# every 4 hours, using the 'INT' environment, and sends an email with the status. 

  