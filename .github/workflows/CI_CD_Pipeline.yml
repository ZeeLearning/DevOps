# This workflow triggers the build/deploy workflow for every repository in the list  

# every 5 minutes, using the 'INT' environment, and sends an email with the status. 

 

 

name: CI/CD Pipeline 

 

 

on:   

  schedule:  

    - cron: '*/5 * * * *'  # Runs every 5 minutes for testing; adjust as needed 

  workflow_dispatch:  

    inputs:  

      environment:  

        description: 'Environment' 

        required: true 

        type: choice 

        options:  

          - 'INT' 

          - 'QAProd' 

          - 'NewQA' 

          - 'SprintQA' 

          - 'LT' 

          - 'Production' 

 

 

jobs:  

  INT_CI_CD_Pipeline:  

    runs-on: self-hosted 

    strategy: 

      matrix: 

        repo_name:  

          - 'CW.Aphrodite'  

          - 'CW.ClientWebREST_API'  

           

    steps: 

      - name: Trigger Build and Deploy Workflow 

        uses: actions/github-script@v4 

        with: 

          script: | 

            const response = await github.actions.createWorkflowDispatch({ 

              owner: context.repo.owner, 

              repo: context.repo.repo, 

              workflow_id: 'Build_Deploy_Env_GitHub.yml', 

              ref: 'main', 

              inputs: { 

                repo_name: '${{ matrix.repo_name }}', 

                environment: 'INT' 

              } 

            }); 

            console.log(response); 

 

 

      - name: Capture Status 

        id: capture_status 

        run: echo "status=${{ job.status }}" >> $GITHUB_ENV 

 

 

  notify: 

    runs-on: ubuntu-latest 

    needs: INT_CI_CD_Pipeline 

    steps: 

      - name: Send Email Notification  

        if: always()  

        shell: pwsh 

        run: | 

          $smtpServer = "x2.eduneering.com" 

          $smtpFrom = "rootdrop@eduneering.com" 

          $smtpTo = "zeeshan.yousaf@ul.com" 

          $smtpPort = "25" 

          $subject = "INT - CI/CD" 

          $body = @" 

          INT CI/CD Pipeline has been completed.  

           

          Summary: 

          - CW.Aphrodite: ${{ needs.INT_CI_CD_Pipeline.outputs['CW.Aphrodite'].result }} 

          - CW.ClientWebREST_API: ${{ needs.INT_CI_CD_Pipeline.outputs['CW.ClientWebREST_API'].result }} 

          "@ 

           

          Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -From $smtpFrom -To $smtpTo -Subject $subject -Body $body 

 