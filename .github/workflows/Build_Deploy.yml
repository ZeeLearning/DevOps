name: Build/Deploy

on:
    workflow_dispatch:
        inputs:
            repo_name:
                description: 'Name of the Repository'
                required: true
                type: choice
                options:
                  - 'CoreLearner'
                  - 'DemoNotCore'

            environment:
                description: 'Environment to build'
                required: true
                type: choice
                options:
                  - 'INT'
                  - 'QA'
                  
# Define environment variables that can be used in the workflow. 
env:
    REPO_NAME: ${{ github.event.inputs.repo_name }}
    REPO_URL: "https://zyousaf31@github.com/ZeeLearning/${{ github.event.inputs.repo_name }}.git"
    WORKSPACE_DIRECTORY: ${{ github.workspace }}
    PLATFORM: 'Any CPU'

jobs:
    Checkout_Target_Repo:
        runs-on: self-hosted
        environment: ${{ github.event.inputs.environment }}
        # Set the output for the solution name
        outputs:
            SOLUTION_NAME: ${{ steps.get_solution_name.outputs.solutionName }}
        steps:
            # Checkout the target repo
            - name: Check out the target repo 
              run: |
                git clone --branch ${{ vars.BRANCH }} ${{ env.REPO_URL}} ${{ env.REPO_NAME }}
                cd ${{ env.REPO_NAME }}
                echo "Cloned repository: ${{ env.REPO_NAME }} (branch: ${{ vars.BRANCH }})"
                git branch 
                echo ${{ env.WORKSPACE_DIRECTORY }}
            
            # Get solution file name 
            - name: Get solution file name
              id: get_solution_name
              run: |
                cd ${{ env.REPO_NAME }}
                $solution = Get-ChildItem -Path . -Filter *.sln -Recurse
                $solutionName = $solution.Name
                echo "Solution file name: $solutionName"
                echo "solutionName=$solutionName" >> $env:GITHUB_OUTPUT

            - name: Show Solution Name Output
              run: |
                echo "Solution name set as output: ${{ steps.get_solution_name.outputs.solutionName }}"
    
    Clean_Up:
        runs-on: self-hosted
        needs: [Checkout_Target_Repo]
        steps:
            # Clean the target repo
            - name: Clean the target repo
              run: |
                cd ${{ env.WORKSPACE_DIRECTORY }}
                Remove-Item -Recurse -Force ${{ env.REPO_NAME }}
                echo "Cleaned up the target repo"# Empty workflow file 
